{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","firstName","setfirstName","selectedItem","setSelectedItem","PersonRow","person","onSelect","first_name","email","onClick","id","PersonInfo","last_name","gender","ip_address","className","value","onChange","evt","target","type","width","filter","p","toLocaleLowerCase","includes","slice","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAiDeA,MA7Cf,WAAe,MAIqBC,IAAMC,SAAS,IAJpC,mBAINC,EAJM,KAIKC,EAJL,OAM2BH,IAAMC,SAAS,IAN1C,mBAMNG,EANM,KAMQC,EANR,KAQPC,EAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,SAAV,OACd,aADuC,CACvC,qBACA,+BACE,6BAAKD,EAAOE,aACZ,6BAAKF,EAAOG,QACZ,6BAAI,wBAAQC,QAAY,kBAAKH,EAASD,IAAlC,wBAHN,OAASA,EAAOK,OAQdC,EAAa,SAAC,GAAD,SAAEJ,WACN,IADI,EAAcK,UACF,MADZ,EAAyBJ,MACC,MAD1B,EAAgCK,OACS,MADzC,EAAwCC,YAK3D,OACE,sBAAKC,UAAU,QAAf,UACE,iDACA,uBAAOC,MAAOhB,EACdiB,SAAU,SAACC,GAAD,OAASjB,EAAaiB,EAAIC,OAAOH,QAAQI,KAAK,SAH1D,IAIE,uBAAOC,MAAM,OAAb,SACE,gCACChB,EAAOiB,QAAO,SAACC,GAAD,OAAKA,EAAEhB,WAAWiB,oBAAoBC,SAASzB,EAAUwB,wBAAsBE,MAAM,EAAE,IACrGC,KAAK,SAACJ,GAAD,OACF,cAACnB,EAAD,CAAWC,OAAQkB,EAAGjB,SAAU,SAACiB,GAAMpB,EAAgBoB,aAK7DrB,GAEC,mCAAK,cAACS,EAAD,eAAgBT,IAArB,WC/BQ0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.8ffe64dc.chunk.js","sourcesContent":["import React from \"react\";\nimport './App.css';\nimport person from './MOCK_DATA.json'\n\nfunction App() {\n\n  // we are going to filter on the records based on the firstName variable.\n  // Using React Hooks \n  const [firstName, setfirstName] = React.useState(\"\") // firstName is a state variable, and setfirstName is a function to set that state\n  \n  const [selectedItem, setSelectedItem] = React.useState(\"\")\n\n  const PersonRow = ({person, onSelect}) =>( // Component definition. onSelect is a custom event handler function. it is defined where the component is called.\n      <>\n      <tr key={person.id}>\n        <td>{person.first_name}</td>\n        <td>{person.email}</td>\n        <td><button onClick = { ()=> onSelect(person)}> Select </button></td>  {/* click event handler for the button will call onSelect and give back the pokemon that was chosen */}\n      </tr>\n      </>\n  )\n\n  const PersonInfo = ({first_name, last_name, email, gender, ip_address}) =>( // here we are directly using the variables. so when this component is used, we need to spread the person object.\n    first_name + \" \"+ last_name +\" | \"+ email +\" | \"+ gender +\" | \"+ ip_address\n  )\n\n  \n  return (\n    <div className=\"title\">\n      <h1> Person Search </h1>\n      <input value={firstName} \n      onChange={(evt) => setfirstName(evt.target.value)} type=\"text\"/> {/* Updating value of hook when it's value changes in input box */}\n      <table width=\"100%\">\n        <tbody>\n        {person.filter((p)=>p.first_name.toLocaleLowerCase().includes(firstName.toLocaleLowerCase())).slice(0,20)\n        .map( (p)=> (\n            <PersonRow person={p} onSelect={(p)=> {setSelectedItem(p)}}/> // call the component and give the values. defining onSelect here as well.\n        ))}\n        </tbody>\n      </table>\n      {/* Displaying the selected item */}\n     {selectedItem && (\n       // this is another way of passing values \n       <h1> <PersonInfo {...selectedItem}/> </h1> // Spreading the selectedItem object, because the component itself takes spreaded values and not the whole object. \n     )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}